/*
 * bootstrap-modbox - Native JavaScript wrapper for simple Bootstrap 5 modals
 * version: 1.0.0
 * author: Eric Robertson
 * license: MIT
 *
 * [github.io page]
 */

export default class modbox{static version="1.0.0";#options;#modal;#modalEl;#footer;static#getUID=(t="modbox-")=>t+Math.floor(1e6*Math.random());static#typeof=t=>"object"==typeof t?Object.prototype.toString.call(t).slice(8,-1).toLowerCase():typeof t;static#deepMerge=(i,n)=>{const s={...i,...n};return Object.keys(s).forEach(t=>{var o=i[t],e=n[t];"object"===modbox.#typeof(o)&&"object"===modbox.#typeof(e)&&(s[t]=modbox.#deepMerge(o,e))}),s};static#checkUserOptions=t=>"string"==typeof t?{body:t}:t;static#buildPromiseModal=(s={},l="alert")=>new Promise((o,t)=>{const i=new modbox(s),n=[s.closeButton];if(["confirm","prompt"].includes(l)){let e=()=>o();"prompt"===l&&"object"===modbox.#typeof(s.input)&&(e=()=>{const t=i.modalEl.querySelector(`#${s.input.id}`);!0===s.input._validate&&!t.reportValidity()||(i.hide(),o(t.value))}),n.unshift({...s.okButton,callback:function(t,o){"function"==typeof s.okButton.callback&&s.okButton.callback.call(this,t,o),e()}})}const[e]=n.map(t=>i.addButton(t));i.addEvent("hide",()=>{"alert"===l?o():["confirm","prompt"].includes(l)&&document.activeElement!==e&&t()}),i.show()});#getDefaultButtonOptions=(t="Close")=>({id:modbox.#getUID("modbox-btn-"),label:t,style:"secondary",class:"",outline:!1,size:null,icon:null,title:null,disabled:!1,close:!0,callback:null});#buildModal=()=>{var t=["primary","secondary","success","danger","dark","body"].includes(this.#options.style),o=this.#options.titleStyle||(t?"white":"dark");let e="";this.#options.title&&(e=`
				<div class="modal-header ${this.#options.style?`bg-${this.#options.style}`:""}">
					<h5 class="modal-title text-${o}">${this.#options.icon?`<i class="${this.#options.icon} me-3"></i>`:""}${this.#options.title}</h5>
					<button type="button" class="${`btn-close ${t?"btn-close-white":""}`}" data-bs-dismiss="modal"></button>
				</div>
			`.trim()),modbox.container.insertAdjacentHTML("beforeend",`
			<div class="modal ${this.#options.fade?"fade":""}" id="${this.#options.id}" tabindex="-1">
				<div class="modal-dialog ${this.#options.scrollable?"modal-dialog-scrollable":""} ${this.#options.center?"modal-dialog-centered":""} ${this.#options.size?`modal-${this.#options.size}`:""}">
					<div class="modal-content">
						${e}
						<div class="modal-body">
							${this.#options.body}
						</div>
						<div class="modal-footer ${this.#options.justifyButtons?`d-flex justify-content-${this.#options.justifyButtons}`:""}"></div>
					</div>
				</div>
			</div>
		`.trim()),this.#modalEl=modbox.container.querySelector(`#${this.#options.id}`),this.#footer=this.#modalEl.querySelector(".modal-footer"),this.#addButtons()};#addButtons=()=>{Array.isArray(this.#options.buttons)||(this.#options.buttons=[]),0===this.#options.buttons.length&&!0===this.#options.defaultButton?this.#options.buttons=[this.#getDefaultButtonOptions(this.#options.defaultButtonLabel)]:this.#footer.classList.add("d-none"),this.#options.buttons.forEach(t=>this.addButton(t))};#addEvents=()=>{Object.entries(this.#options.events).forEach(([t,o])=>{this.addEvent(t,o)}),!0===this.#options.destroyOnClose&&this.addEvent("hidden",()=>this.destroy())};constructor(t={}){if(this.#options={...bootstrap.Modal.Default,id:modbox.#getUID(),icon:null,style:"white",titleStyle:null,title:"Information",body:"",size:null,center:!1,fade:!0,show:!1,scrollable:!0,destroyOnClose:!1,defaultButton:!0,defaultButtonLabel:"Close",swapButtonOrder:!1,justifyButtons:null,buttons:[],events:{},...modbox.#checkUserOptions(t)},"string"!=typeof this.#options.body||!this.#options.body.length)throw new Error('The "body" configuration option is required (string).');var o,e;this.#buildModal(),this.#modal=new bootstrap.Modal(this.#modalEl,([{backdrop:o,keyboard:e,focus:t}]=[this.#options],{backdrop:o,keyboard:e,focus:t})),this.#addEvents(),!0===this.#options.show&&this.show()}get options(){return this.#options}get modal(){return this.#modal}get modalEl(){return this.#modalEl}get buttons(){return[...this.#footer.querySelectorAll("button")]}addButton(t={},o=this.#options.swapButtonOrder){this.#footer.classList.remove("d-none");var e=o?"afterbegin":"beforeend";if("string"==typeof t&&t.length){this.#footer.insertAdjacentHTML(e,t);var i=this.buttons;return i[o?0:i.length-1]}const n={...this.#getDefaultButtonOptions(),...t};this.#footer.insertAdjacentHTML(e,`
			<button
				type="button"
				class="btn btn-${n.outline?"outline-":""}${n.style} ${n.class} ${n.size?`btn-${n.size}`:""}"
				id="${n.id}"
				${n.title?`title="${n.title}"`:""}
				${n.close?'data-bs-dismiss="modal"':""}
				${n.disabled?"disabled":""}
			>
				${n.icon?`<i class="${n.icon} me-2"></i>`:""}${n.label}
			</button>
		`.trim());const s=this.#footer.querySelector(`#${n.id}`);return s&&"function"==typeof n.callback&&s.addEventListener("click",t=>n.callback.call(s,t,this)),s}addEvent(t,o){["show","shown","hide","hidden","hidePrevented"].includes(t)&&"function"==typeof o&&this.#modalEl.addEventListener(`${t}.bs.modal`,o)}destroy(){this.dispose(),this.#modalEl.remove()}static get container(){let t=document.querySelector("#modbox-container");if(!t){const o=document.createElement("div");o.id="modbox-container",t=document.body.appendChild(o)}return t}static alert(t={}){t={...modbox.#deepMerge({title:"Alert",closeButton:{}},modbox.#checkUserOptions(t)),destroyOnClose:!0,defaultButton:!1,buttons:[]};return modbox.#buildPromiseModal(t)}static info(t={}){return modbox.alert({style:"info",title:"Information",...modbox.#checkUserOptions(t)})}static success(t={}){return modbox.alert({style:"success",title:"Success",...modbox.#checkUserOptions(t)})}static danger(t={}){return modbox.alert({style:"danger",title:"Error",...modbox.#checkUserOptions(t)})}static error(t={}){return modbox.danger(t)}static confirm(t={}){t={...modbox.#deepMerge({title:"Confirm",okButton:{label:"OK",style:"primary"},closeButton:{label:"Cancel"}},modbox.#checkUserOptions(t)),destroyOnClose:!0,defaultButton:!1,buttons:[]};return modbox.#buildPromiseModal(t,"confirm")}static prompt(t={}){var o={title:"Prompt",input:{id:modbox.#getUID("modbox-input-"),type:"text",class:"",value:"",title:null,placeholder:null,autocomplete:"off",minlength:null,maxlength:null,pattern:null,required:!1,_validate:!1},okButton:{label:"OK",style:"primary"},closeButton:{label:"Cancel"}};const e={...modbox.#deepMerge(o,modbox.#checkUserOptions(t)),destroyOnClose:!0,defaultButton:!1,buttons:[]};return"regexp"===modbox.#typeof(e.input?.pattern)&&(e.input.pattern=e.input.pattern.source),(!0===e.input.required||"number"==typeof e.input.minlength||"string"==typeof e.input.pattern&&e.input.pattern.length)&&(e.okButton.close=!1,e.input._validate=!0),e.body=`
			${e.body?`<p>${e.body}</p>`:""}
			${"string"==typeof e.input?e.input:`<input
					type="${e.input.type}"
					class="form-control ${e.input.class}"
					id="${e.input.id}"
					value="${e.input.value}"
					${e.input.title?`title="${e.input.title}"`:""}
					${e.input.placeholder?`placeholder="${e.input.placeholder}"`:""}
					${e.input.autocomplete?`autocomplete="${e.input.autocomplete}"`:""}
					${"number"==typeof e.input.minlength?`minlength="${e.input.minlength}"`:""}
					${"number"==typeof e.input.maxlength?`maxlength="${e.input.maxlength}"`:""}
					${"string"==typeof e.input.pattern&&e.input.pattern.length?`pattern="${e.input.pattern}"`:""}
					${e.input.required?"required":""}
				>`}
		`.trim(),modbox.#buildPromiseModal(e,"prompt")}toggle(){this.#modal.toggle()}show(t){this.#modal.show(t)}hide(){this.#modal.hide()}handleUpdate(){this.#modal.handleUpdate()}dispose(){this.#modal.dispose()}static getInstance(t){return bootstrap.Modal.getInstance(t)}static getOrCreateInstance(t){return bootstrap.Modal.getOrCreateInstance(t)}}
//# sourceMappingURL=bootstrap-modbox.esm.min.js.map